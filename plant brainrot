-- Place ID ของ Plants Vs Brainrots
local PLACE_ID = 127742093697776

-- เช็คก่อนว่ากำลังอยู่ในเกมนี้หรือไม่
if game.PlaceId ~= PLACE_ID then
    return -- ออกจากสคริปต์ ไม่โหลด UI
end

-- ====== Config Save System ======
local HttpService = game:GetService("HttpService")
local configFile = "PlantBrainrotConfig.json"

-- โหลด config ถ้ามี
local function loadConfig()
    if isfile(configFile) then
        local data = readfile(configFile)
        return HttpService:JSONDecode(data)
    end
    return {}
end

-- เซฟ config
local function saveConfig(cfg)
    writefile(configFile, HttpService:JSONEncode(cfg))
end

local Config = loadConfig()


-- ===== Load UI Library =====
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Chxtoqfee12/Plant-brainrot/refs/heads/main/lib"))()

-- Create Main Window
local Window = Library:Window({
    Title = "CHX Plant vs Brainrot",
    Desc = "discord.gg/zHMEUZrHZ6",
    Icon = 105059922903197,
    Theme = "Dark",
    Config = {Keybind = Enum.KeyCode.LeftControl, Size = UDim2.new(0,450,0,350)},
    CloseUIButton = {Enabled = true, Text = "Close/Open"}
})

-- Notification
Window:Notify({
    Title = "Notification",
    Desc = "สคริปแมพ 'Plant vs Brainrot' V1 แจ้งบัคที่ Discord",
    Time = 4
})

-- ===== Services =====
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local buyEvent = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")
local sellRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("ItemSell")

-- ===== Main Tab =====
local MainTab = Window:Tab({Title = "Main", Icon = "star"})
MainTab:Section({Title = "Player Boosts"})

-- Speed Boost Slider
MainTab:Slider({
    Title = "Speed Boost",
    Desc = "Adjust WalkSpeed",
    Min = 16,
    Max = 200,
    Default = Config.SpeedBoost or 16,
    Callback = function(value)
        Config.SpeedBoost = value
        saveConfig(Config)
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
            LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = value
        end
    end
})

-- Jump Power Slider
MainTab:Slider({
    Title = "Jump Power",
    Desc = "Adjust Jump Power",
    Min = 50,
    Max = 500,
    Default = Config.JumpPower or 50,
    Callback = function(value)
        Config.JumpPower = value
        saveConfig(Config)
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
            LocalPlayer.Character:FindFirstChildOfClass("Humanoid").JumpPower = value
        end
    end
})

-- ===== Boost FPS Clay Mode Toggle with Restore =====
local clayModeEnabled = false

-- ตัวแปรสำรองค่าเดิม
local backup = {
    QualityLevel = settings().Rendering.QualityLevel,
    GlobalShadows = game.Lighting.GlobalShadows,
    FogEnd = game.Lighting.FogEnd,
    FPSCap = (setfpscap and 60 or nil),
    ParticleStates = {},
    ExplosionStates = {},
    BasePartMaterials = {},
    MeshAndDecalParents = {}
}

MainTab:Toggle({
    Title = "Boost FPS (Clay Mode)",
    Desc = "Remove textures & smooth everything like clay",
    Value = false,
    Callback = function(state)
        clayModeEnabled = state

        if clayModeEnabled then
            -- Backup ก่อน
            backup.QualityLevel = settings().Rendering.QualityLevel
            backup.GlobalShadows = game.Lighting.GlobalShadows
            backup.FogEnd = game.Lighting.FogEnd
            if setfpscap then
                backup.FPSCap = 60 -- สมมุติว่าปกติ FPS 60
                setfpscap(240)
            end

            -- Backup สถานะของ Particle, Trail, Fire, Smoke, Explosion
            for _, v in pairs(workspace:GetDescendants()) do
                if v:IsA("ParticleEmitter") or v:IsA("Trail") or v:IsA("Fire") or v:IsA("Smoke") then
                    backup.ParticleStates[v] = v.Enabled
                    v.Enabled = false
                elseif v:IsA("Explosion") then
                    backup.ExplosionStates[v] = v.Visible
                    v.Visible = false
                elseif v:IsA("BasePart") then
                    backup.BasePartMaterials[v] = v.Material
                    v.Material = Enum.Material.SmoothPlastic
                elseif v:IsA("Decal") or v:IsA("Texture") or v:IsA("SpecialMesh") then
                    -- แทนที่จะลบเก็บ parent ไว้เพื่อตอนปิดสามารถสร้างใหม่
                    backup.MeshAndDecalParents[v] = {Parent=v.Parent, ClassName=v.ClassName, Name=v.Name}
                    v:Destroy()
                end
            end

            settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
            pcall(function() game.Lighting.GlobalShadows = false end)
            pcall(function() game.Lighting.FogEnd = 9e9 end)

        else
            -- คืนค่าเดิม
            settings().Rendering.QualityLevel = backup.QualityLevel
            game.Lighting.GlobalShadows = backup.GlobalShadows
            game.Lighting.FogEnd = backup.FogEnd
            if setfpscap and backup.FPSCap then setfpscap(backup.FPSCap) end

            for v, enabled in pairs(backup.ParticleStates) do
                if v and v.Parent then v.Enabled = enabled end
            end
            for v, visible in pairs(backup.ExplosionStates) do
                if v and v.Parent then v.Visible = visible end
            end
            for part, material in pairs(backup.BasePartMaterials) do
                if part and part.Parent then part.Material = material end
            end
            for v, info in pairs(backup.MeshAndDecalParents) do
                if info.Parent then
                    local newObj
                    if info.ClassName == "Decal" then
                        newObj = Instance.new("Decal")
                    elseif info.ClassName == "Texture" then
                        newObj = Instance.new("Texture")
                    elseif info.ClassName == "SpecialMesh" then
                        newObj = Instance.new("SpecialMesh")
                    end
                    if newObj then
                        newObj.Name = info.Name
                        newObj.Parent = info.Parent
                    end
                end
            end
        end
    end
})


-- ===== Auto Farm Tab =====
local Tab = Window:Tab({Title = "Auto Farm", Icon = "star"})

-- ====== Sell All Brainrot ======
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local sellRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("ItemSell")

local sellingEnabled = false
local cooldownTime = 20
local currentCooldown = 0

-- Toggle to enable/disable auto selling
Tab:Toggle({
    Title = "Auto Sell Brainrot",
    Desc = "If enabled, it will instantly sell, then sell again every 20 seconds",
    Default = false,
    Callback = function(state)
        sellingEnabled = state

        if state then
            -- Sell instantly when turning ON
            pcall(function()
                sellRemote:FireServer()
            end)
            currentCooldown = cooldownTime
        else
            cooldownLabel:Set("Sell Cooldown: OFF")
        end
    end
})

-- Loop for auto sell + update cooldown label
task.spawn(function()
    while true do
        task.wait(1)

        if sellingEnabled then
            if currentCooldown <= 0 then
                -- Fire Remote to sell
                pcall(function()
                    sellRemote:FireServer()
                end)
                currentCooldown = cooldownTime
            else
                currentCooldown -= 1
            end

            cooldownLabel:Set("Sell Cooldown: " .. tostring(currentCooldown) .. "s")
        end
    end
end)




-- ===== Auto Buy Tab =====
local BuyTab = Window:Tab({Title = "Auto Buy", Icon = "star"})

-- Gears
BuyTab:Section({Title = "Gears Shop"})
local buyAllGearsEnabled = Config.BuyAllGears or false
BuyTab:Toggle({
    Title = "Auto Buy All Gears",
    Value = buyAllGearsEnabled,
    Callback = function(v)
        buyAllGearsEnabled = v
        Config.BuyAllGears = v
        saveConfig(Config)
    end
})

local gearsItems = {
    "Meme Lucky Egg","Secret Lucky Egg","Godly Lucky Egg","Speed Potion",
    "Damage Potion","Lucky Potion","Banana Gun","Frost Grenade",
    "Carrot Launcher","Water Bucket","Frost Blower",
}

local autoBuyGears = Config.AutoBuyGears or {}
for _, gearName in ipairs(gearsItems) do
    if autoBuyGears[gearName] == nil then autoBuyGears[gearName] = false end
    BuyTab:Toggle({
        Title = gearName,
        Value = autoBuyGears[gearName],
        Callback = function(v)
            autoBuyGears[gearName] = v
            Config.AutoBuyGears = autoBuyGears
            saveConfig(Config)
        end
    })
end

-- Seeds
BuyTab:Section({Title = "Seeds Shop"})
local buyAllSeedsEnabled = Config.BuyAllSeeds or false
BuyTab:Toggle({
    Title = "Auto Buy All Seeds",
    Value = buyAllSeedsEnabled,
    Callback = function(v)
        buyAllSeedsEnabled = v
        Config.BuyAllSeeds = v
        saveConfig(Config)
    end
})

local seedItems = {
    "Cactus Seed","Strawberry Seed","Pumpkin Seed","Sunflower Seed",
    "Dragon Fruit Seed","Eggplant Seed","Watermelon Seed","Cocotank Seed",
    "Carnivorous Plant Seed","Mr Carrot Seed","Tomatrio Seed",
}

local autoBuySeeds = Config.AutoBuySeeds or {}
for _, seedName in ipairs(seedItems) do
    if autoBuySeeds[seedName] == nil then autoBuySeeds[seedName] = false end
    BuyTab:Toggle({
        Title = seedName,
        Value = autoBuySeeds[seedName],
        Callback = function(v)
            autoBuySeeds[seedName] = v
            Config.AutoBuySeeds = autoBuySeeds
            saveConfig(Config)
        end
    })
end

-- Loop Auto Buy
task.spawn(function()
    while true do
        task.wait(0.1)

        if buyAllGearsEnabled then
            for _, gearName in ipairs(gearsItems) do
                pcall(function() buyEvent:FireServer({gearName," "}) end)
                task.wait(0.5)
            end
        else
            for gearName, isEnabled in pairs(autoBuyGears) do
                if isEnabled then
                    pcall(function() buyEvent:FireServer({gearName," "}) end)
                    task.wait(0.5)
                end
            end
        end

        if buyAllSeedsEnabled then
            for _, seedName in ipairs(seedItems) do
                pcall(function() buyEvent:FireServer({seedName,"\a"}) end)
                task.wait(0.5)
            end
        else
            for seedName, isEnabled in pairs(autoBuySeeds) do
                if isEnabled then
                    pcall(function() buyEvent:FireServer({seedName,"\a"}) end)
                    task.wait(0.5)
                end
            end
        end
    end
end)

-- ==========================
-- ‡πÇ‡∏´‡∏•‡∏î OrionLib
-- ==========================
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/Chxtoqfee12/Plant-brainrot/refs/heads/main/lib'))()


-- ==========================
-- ‡∏™‡∏£‡πâ‡∏≤‡∏á Window
-- ==========================
local Window = OrionLib:MakeWindow({
    Name = "CHX Plant vs Brainrot V2.3.1",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "CHXPlantBrainrot"
})



-- ==========================
-- Config System
-- ==========================
local HttpService = game:GetService("HttpService")
local configFile = "CHXPlantBrainrot.json"
local config = {}

local function loadConfig()
    if isfile(configFile) then
        config = HttpService:JSONDecode(readfile(configFile))
    else
        config = {}
    end
end

local function saveConfig()
    writefile(configFile, HttpService:JSONEncode(config))
end

loadConfig()






-- ==========================
-- ‡∏™‡∏£‡πâ‡∏≤‡∏á Tabs ‡πÄ‡∏õ‡∏•‡πà‡∏≤ ‡πÜ
-- ==========================
local FarmTab = Window:MakeTab({
    Name = "üöú ‡∏ü‡∏≤‡∏£‡πå‡∏°",
    Icon = "rbxassetid://6031075936",
})

-- ==========================
-- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£
-- ==========================
local player = game.Players.LocalPlayer
local homeSaved = false
local homePosition = nil
local autoAttackEnabled = false
local autoCollectEnabled = false
local warnedNoSave = false

-- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ loop
local startFarming = false
local hasWarpedToHome = false

-- ==========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ö‡πâ‡∏≤‡∏ô
-- ==========================
local function saveHomePosition()
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        homePosition = player.Character.HumanoidRootPart.Position
        homeSaved = true

        OrionLib:MakeNotification({
            Name = "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ö‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß",
            Content = "‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
            Image = "rbxassetid://6031075936",
            Time = 3,
        })
    end
end

-- ==========================
-- Section: ‡∏ü‡∏≤‡∏£‡πå‡∏°
-- ==========================
FarmTab:AddSection({ Name = "üöú ‡∏ü‡∏≤‡∏£‡πå‡∏°" })

-- ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ö‡πâ‡∏≤‡∏ô
FarmTab:AddButton({
    Name = "üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ö‡πâ‡∏≤‡∏ô",
    Callback = saveHomePosition
})

-- Toggle Auto Attack
FarmTab:AddToggle({
    Name = "‚öîÔ∏è ‡πÇ‡∏à‡∏°‡∏ï‡∏µ Brainrot ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥",
    Default = false,
    Callback = function(value)
        autoAttackEnabled = value
        if value then
            hasWarpedToHome = false
            startFarming = false
            if not homeSaved and not warnedNoSave then
                OrionLib:MakeNotification({
                    Name = "‚ö†Ô∏è ‡πÇ‡∏õ‡∏£‡∏î‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ö‡πâ‡∏≤‡∏ô",
                    Content = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠ Warp ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏à‡∏°‡∏ï‡∏µ",
                    Image = "rbxassetid://6031075936",
                    Time = 5,
                })
                warnedNoSave = true
            else
                warnedNoSave = false
            end
        end
    end
})

-- Toggle Auto Collect (‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏∏‡∏Å 5 ‡∏ß‡∏¥)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local equipRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("EquipBestBrainrots")

FarmTab:AddToggle({
    Name = "üí∏ ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏∏‡∏Å 5 ‡∏ß‡∏¥",
    Default = false,
    Callback = function(value)
        autoCollectEnabled = value
        if value then
            task.spawn(function()
                while autoCollectEnabled do
                    pcall(function()
                        equipRemote:FireServer()
                    end)
                    task.wait(5)
                end
            end)
        end
    end
})

-- Toggle Auto Sell
local sellRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("ItemSell")
local sellingEnabled = false
local cooldownTime = 20
local lastSellTime = 0

FarmTab:AddToggle({
    Name = "üí∞ ‡∏Ç‡∏≤‡∏¢ Brainrot ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏∏‡∏Å20‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ",
    Default = false,
    Callback = function(value)
        sellingEnabled = value
    end
})

-- ==========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏≤ Brainrots
-- ==========================
local attackRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("AttacksServer"):WaitForChild("WeaponAttack")
local floatHeight = 3
local lerpSpeed = 0.5
local warnedNoBat = false

local function getBrainrots()
    local folder = workspace:FindFirstChild("ScriptedMap") and workspace.ScriptedMap:FindFirstChild("Brainrots")
    if not folder then return {} end
    local brainrots = {}
    for _, v in ipairs(folder:GetChildren()) do
        if v:IsA("Model") then
            table.insert(brainrots, v)
        end
    end
    return brainrots
end

-- ==========================
-- Loop Auto Attack + Auto Sell + Auto Equip Bat + Warp Home
-- ==========================
task.spawn(function()
    while true do
        task.wait(0.005)

        if autoAttackEnabled and player.Character then
            local hrp = player.Character:FindFirstChild("HumanoidRootPart")
            local humanoid = player.Character:FindFirstChild("Humanoid")
            local tool = player.Character:FindFirstChildOfClass("Tool")

            if hrp and humanoid then
                humanoid.PlatformStand, humanoid.Sit = false, false
                hrp.Velocity = Vector3.zero

                -- ===== Auto Equip Bat =====
                if not tool then
                    local backpack = player:FindFirstChild("Backpack")
                    local foundBat = nil
                    if backpack then
                        for _, item in ipairs(backpack:GetChildren()) do
                            if item:IsA("Tool") and string.find(item.Name:lower(), "bat") then
                                foundBat = item
                                break
                            end
                        end
                    end
                    if foundBat then
                        player.Character.Humanoid:EquipTool(foundBat)
                        tool = foundBat
                    else
                        if not warnedNoBat then
                            OrionLib:MakeNotification({
                                Name = "‚ö†Ô∏è ‡πÇ‡∏õ‡∏£‡∏î‡∏ñ‡∏∑‡∏≠ Bat",
                                Content = "‡∏´‡∏≤ Bat ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤/‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ ‡∏î‡∏≤‡πÄ‡∏°‡∏à‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤",
                                Image = "rbxassetid://6031075936",
                                Time = 4,
                            })
                            warnedNoBat = true
                            spawn(function()
                                wait(6)
                                warnedNoBat = false
                            end)
                        end
                    end
                end

                -- ===== Warp to home ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î Auto =====
                if not hasWarpedToHome and homeSaved and homePosition then
                    hrp.CFrame = CFrame.new(homePosition)
                    hasWarpedToHome = true
                    task.delay(1, function()
                        startFarming = true
                    end)
                end

                -- ===== Start farming Brainrots =====
                if startFarming then
                    local brainrots = getBrainrots()
                    local closest, minDist = nil, math.huge
                    for _, enemy in ipairs(brainrots) do
                        if enemy and enemy.Parent then
                            local part = enemy:FindFirstChild("HumanoidRootPart") or enemy:FindFirstChildWhichIsA("BasePart")
                            if part then
                                local dist = (part.Position - hrp.Position).Magnitude
                                if dist < minDist then
                                    closest = enemy
                                    minDist = dist
                                end
                            end
                        end
                    end
                    if closest and closest.Parent then
                        local targetPart = closest:FindFirstChild("HumanoidRootPart") or closest:FindFirstChildWhichIsA("BasePart")
                        if targetPart then
                            local desiredPos = Vector3.new(targetPart.Position.X, targetPart.Position.Y - floatHeight, targetPart.Position.Z)
                            local newPos = hrp.Position:Lerp(desiredPos, lerpSpeed)
                            hrp.CFrame = CFrame.new(newPos, Vector3.new(targetPart.Position.X, newPos.Y, targetPart.Position.Z))
                            local idObj = closest:FindFirstChild("ID")
                            local idValue = idObj and idObj.Value or closest.Name
                            for i = 1, 6 do
                                pcall(function()
                                    attackRemote:FireServer({idValue})
                                end)
                            end
                        end
                    end
                end
            end
        end

        -- ===== Auto Sell Brainrot =====
        if sellingEnabled and tick() - lastSellTime >= cooldownTime then
            pcall(function()
                sellRemote:FireServer()
            end)
            lastSellTime = tick()
        end
    end
end)




-- ==========================
-- Tab ‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ó‡πå
-- ==========================
local EventTab = Window:MakeTab({
    Name = "üé© ‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ó‡πå",
    Icon = "rbxassetid://6031075936",
})

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

-- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°
local autoPrison = false
local maxPerName = 5
local isSelling = false
local prisonTask = nil
local sellTask = nil
local resetTask = nil

-- ==========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢
-- ==========================
local function isBrainrotMatch(toolName, brainName)
    local cleanName = toolName:match("%] (.+)") or toolName
    return string.find(string.lower(cleanName), string.lower(brainName)) ~= nil
end

local blacklist = {
    "WarDenelli Brickatoni",
    "Dragon Cannelloni"
}

local function isBlacklisted(toolName)
    for _, name in ipairs(blacklist) do
        if isBrainrotMatch(toolName, name) then return true end
    end
    return false
end

-- ==========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ç‡∏≤‡∏¢ Brainrot (‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
-- ==========================
local function startAutoSell()
    if sellTask then return end
    sellTask = task.spawn(function()
        isSelling = true
        print("[üõë] ‡∏´‡∏¢‡∏∏‡∏î AutoPrison ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Ç‡∏≤‡∏¢...")

        local brainrotList = {
            "Alessio","Orcalero Orcala","Bandito Bobrito","Trippi Troppi",
            "Bombardiro Crocodilo","Brr Brr Patapim","Ballerina Cappuccina",
            "Bananita DolPhinita","Burbaloni Lulliloli","Cappuccino Assasino",
            "Orcalcro Orcala","Svinino Bombondino","Bombini Gussini",
            "Bandito Bobrito","Bombardiro Crocodilo","Elefanto Cocofanto",
            "Trippi Troppi","Frigo Camelo","Bambini Crostini",
            "Gangster Footera","Madung","Crazylone Pizaione"
        }

        local character = LocalPlayer.Character
        local humanoid = character and character:FindFirstChildOfClass("Humanoid")
        local Backpack = LocalPlayer:FindFirstChild("Backpack")
        if not Backpack or not humanoid then isSelling=false return end

        -- ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏ô brainrotList ‡∏ó‡∏µ‡πà‡∏°‡∏µ kg
        local countTable = {}
        for _, item in ipairs(Backpack:GetChildren()) do
            if item:IsA("Tool") and not isBlacklisted(item.Name) then
                local hasKG = string.find(item.Name, "%[%d+%.?%d* kg%]")
                if hasKG then
                    for _, name in ipairs(brainrotList) do
                        if isBrainrotMatch(item.Name, name) then
                            countTable[name] = (countTable[name] or 0) + 1
                        end
                    end
                end
            end
        end

        -- ‡∏Ç‡∏≤‡∏¢‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏ô brainrotList ‡πÄ‡∏Å‡∏¥‡∏ô maxPerName
        for _, name in ipairs(brainrotList) do
            local remaining = countTable[name] or 0
            if remaining > maxPerName then
                local toSell = remaining - maxPerName
                for _, item in ipairs(Backpack:GetChildren()) do
                    if toSell <= 0 then break end
                    if item:IsA("Tool") and not isBlacklisted(item.Name) and isBrainrotMatch(item.Name, name) then
                        local hasKG = string.find(item.Name, "%[%d+%.?%d* kg%]")
                        if hasKG then
                            for i=1,5 do pcall(function() humanoid:EquipTool(item) end) task.wait(0.1) end
                            if item.Parent == character then
                                pcall(function()
                                    ReplicatedStorage.Remotes.ItemSell:FireServer(true)
                                end)
                                toSell = toSell - 1
                                task.wait(0.05)
                            end
                        end
                    end
                end
            end
        end

        -- ‡∏Ç‡∏≤‡∏¢‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ kg ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô brainrotList ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà blacklist
        for _, item in ipairs(Backpack:GetChildren()) do
            if item:IsA("Tool") and not isBlacklisted(item.Name) then
                local hasKG = string.find(item.Name, "%[%d+%.?%d* kg%]")
                if hasKG then
                    local inList = false
                    for _, name in ipairs(brainrotList) do
                        if isBrainrotMatch(item.Name, name) then
                            inList = true
                            break
                        end
                    end
                    if not inList then
                        for i=1,5 do pcall(function() humanoid:EquipTool(item) end) task.wait(0.05) end
                        if item.Parent == character then
                            pcall(function()
                                ReplicatedStorage.Remotes.ItemSell:FireServer(true)
                            end)
                            task.wait(0.05)
                        end
                    end
                end
            end
        end

        print("[‚úÖ] ‡∏Ç‡∏≤‡∏¢‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏õ‡∏¥‡∏î AutoPrison ‡∏ï‡πà‡∏≠")
        isSelling = false
        sellTask = nil
    end)
end


EventTab:AddToggle({
    Name = "üîÅ ‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏ó‡∏≥‡πÄ‡∏Ñ‡∏ß‡∏™ Prison Event [Beta]",
    Default = false,
    Callback = function(state)
        autoPrison = state

        -- ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å task ‡πÄ‡∏î‡∏¥‡∏°‡∏Å‡πà‡∏≠‡∏ô
        if prisonTask then task.cancel(prisonTask) prisonTask = nil end
        if resetTask then task.cancel(resetTask) resetTask = nil end

        if autoPrison then
            local brainrotList = {
                "Alessio","Orcalero Orcala","Bandito Bobrito","Trippi Troppi",
                "Bombardiro Crocodilo","Brr Brr Patapim","Ballerina Cappuccina",
                "Bananita DolPhinita","Burbaloni Lulliloli","Cappuccino Assasino",
                "Orcalcro Orcala","Svinino Bombondino","Bombini Gussini",
                "Bandito Bobrito","Bombardiro Crocodilo","Elefanto Cocofanto",
                "Trippi Troppi","Frigo Camelo","Bambini Crostini",
                "Gangster Footera","Madung","Crazylone Pizaione"
            }

            -- üîÅ ‡∏ß‡∏ô‡∏ñ‡∏∑‡∏≠ 1 ‡∏ï‡∏±‡∏ß‡∏ï‡πà‡∏≠ Brainrot
            prisonTask = task.spawn(function()
                while autoPrison do
                    if isSelling then
                        print("[‚õî] ‡∏´‡∏¢‡∏∏‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Ç‡∏≤‡∏¢...")
                        repeat task.wait(1) until not isSelling or not autoPrison
                    end

                    local character = LocalPlayer.Character
                    local humanoid = character and character:FindFirstChildOfClass("Humanoid")
                    local Backpack = LocalPlayer:FindFirstChild("Backpack")
                    if not Backpack or not humanoid then
                        task.wait(1)
                        continue
                    end

                    -- üîÅ ‡∏ß‡∏ô Brainrot List ‡∏ó‡∏µ‡∏•‡∏∞‡∏ï‡∏±‡∏ß
                    for _, brainName in ipairs(brainrotList) do
                        if not autoPrison or isSelling then break end

                        -- ‡∏´‡∏≤ Tool ‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö brainName
                        local toolToUse = nil
                        for _, tool in ipairs(Backpack:GetChildren()) do
                            if tool:IsA("Tool") and not isBlacklisted(tool.Name) and isBrainrotMatch(tool.Name, brainName) then
                                toolToUse = tool
                                break
                            end
                        end

                        -- ‡∏ñ‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏ó‡∏≥ TurnIn ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
                        if toolToUse then
                            pcall(function()
                                humanoid:EquipTool(toolToUse)
                                ReplicatedStorage:WaitForChild("Remotes")
                                    :WaitForChild("Events"):WaitForChild("Prison")
                                    :WaitForChild("Interact"):FireServer("TurnIn")
                            end)
                            task.wait(0.05)  -- ‚¨ÖÔ∏è ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏õ‡πá‡∏ô 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                        end
                    end
                end
            end)
        end
    end
})

-- ==========================
-- ‡∏õ‡∏∏‡πà‡∏° Reset ‡πÄ‡∏Ñ‡∏ß‡∏™ Prison Event
-- ==========================
EventTab:AddButton({
    Name = "üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏Ñ‡∏ß‡∏™ Prison Event",
    Callback = function()
        pcall(function()
            local args = {"ResetRequest"}
            ReplicatedStorage:WaitForChild("Remotes")
                :WaitForChild("Events"):WaitForChild("Prison")
                :WaitForChild("Interact"):FireServer(unpack(args))
        end)
        print("[‚úÖ] ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ResetRequest ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
    end
})




-- ==========================
-- Slider ‡∏õ‡∏£‡∏±‡∏ö maxPerName
-- ==========================
EventTab:AddSlider({
    Name = "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏ã‡πâ‡∏≥‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ï‡πà‡∏≠‡∏ï‡∏±‡∏ß (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 10)",
    Min = 1,
    Max = 10,
    Default = maxPerName,
    Increment = 1,
    ValueName = "‡∏ä‡∏¥‡πâ‡∏ô",
    Callback = function(value)
        maxPerName = value
    end
})

-- ==========================
-- ‡∏õ‡∏∏‡πà‡∏°‡∏Ç‡∏≤‡∏¢ Brainrot Flexible (‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
-- ==========================
EventTab:AddButton({
    Name = "üí∞ ‡∏Ç‡∏≤‡∏¢ Brainrot ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏öEvent [Beta]",
    Callback = function()
        if not isSelling then
            startAutoSell()
        end
    end
})








-- ==========================
-- ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Gear ‡πÅ‡∏•‡∏∞ Seed
-- ==========================
local gearsItems = {"Water Bucket","Frost Grenade","Banana Gun","Frost Blower","Carrot Launcher"}
local seedsItems = {"Cactus Seed","Strawberry Seed","Pumpkin Seed","Sunflower Seed","Dragon Fruit Seed","Eggplant Seed","Watermelon Seed","Grape Seed","Cocotank Seed","Carnivorous Plant Seed","Mr Carrot Seed","Tomatrio Seed","Shroombino Seed"}

local autoBuyGears = {}
local autoBuySeeds = {}
for _, gearName in ipairs(gearsItems) do
    autoBuyGears[gearName] = config.autoBuyGears and config.autoBuyGears[gearName] or false
end
for _, seedName in ipairs(seedsItems) do
    autoBuySeeds[seedName] = config.autoBuySeeds and config.autoBuySeeds[seedName] or false
end

local buyAllGearsEnabled = config.buyAllGearsEnabled or false
local buyAllSeedsEnabled = config.buyAllSeedsEnabled or false


-- ==========================
-- Shop Tab
-- ==========================
local ShopTab = Window:MakeTab({
    Name = "üõí ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤",
    Icon = "rbxassetid://6031075936"
})

local gearsItems = {"Water Bucket","Frost Grenade","Banana Gun","Frost Blower","Carrot Launcher"}
local seedsItems = {"Cactus Seed","Strawberry Seed","Pumpkin Seed","Sunflower Seed","Dragon Fruit Seed","Eggplant Seed","Watermelon Seed","Grape Seed","Cocotank Seed","Carnivorous Plant Seed","Mr Carrot Seed","Tomatrio Seed","Shroombino Seed","Mango Seed"}

local autoBuyGears = {}
local autoBuySeeds = {}
for _, gearName in ipairs(gearsItems) do
    autoBuyGears[gearName] = config.autoBuyGears and config.autoBuyGears[gearName] or false
end
for _, seedName in ipairs(seedsItems) do
    autoBuySeeds[seedName] = config.autoBuySeeds and config.autoBuySeeds[seedName] or false
end

local buyAllGearsEnabled = config.buyAllGearsEnabled or false
local buyAllSeedsEnabled = config.buyAllSeedsEnabled or false

-- ==========================
-- Section: Gears Shop
-- ==========================
local Fram = ShopTab:AddSection({
    Name = "üõí Gear"
})

-- Toggle ‡∏ã‡∏∑‡πâ‡∏≠ Gear ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
ShopTab:AddToggle({
    Name = "‡∏ã‡∏∑‡πâ‡∏≠ Gear ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥",
    Default = buyAllGearsEnabled,
    Callback = function(state)
        buyAllGearsEnabled = state
        config.buyAllGearsEnabled = state
        saveConfig()
    end
})

-- Toggle Gear ‡∏£‡∏≤‡∏¢‡∏ï‡∏±‡∏ß
for _, gearName in ipairs(gearsItems) do
    ShopTab:AddToggle({
        Name = gearName,
        Default = autoBuyGears[gearName],
        Callback = function(state)
            autoBuyGears[gearName] = state
            config.autoBuyGears = autoBuyGears
            saveConfig()
        end
    })
end

-- ==========================
-- Section: Gears Shop
-- ==========================
local Fram = ShopTab:AddSection({
    Name = "üõí Seed"
})

-- Toggle ‡∏ã‡∏∑‡πâ‡∏≠ Seed ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
ShopTab:AddToggle({
    Name = "‡∏ã‡∏∑‡πâ‡∏≠ Seed ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥",
    Default = buyAllSeedsEnabled,
    Callback = function(state)
        buyAllSeedsEnabled = state
        config.buyAllSeedsEnabled = state
        saveConfig()
    end
})

-- Toggle Seed ‡∏£‡∏≤‡∏¢‡∏ï‡∏±‡∏ß
for _, seedName in ipairs(seedsItems) do
    ShopTab:AddToggle({
        Name = seedName,
        Default = autoBuySeeds[seedName],
        Callback = function(state)
            autoBuySeeds[seedName] = state
            config.autoBuySeeds = autoBuySeeds
            saveConfig()
        end
    })
end

-- ==========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ã‡∏∑‡πâ‡∏≠ Gear / Seed
-- ==========================
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local buyGearRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("BuyGear")
local buySeedRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("BuyItem")

local function buyGear(gearName)
    pcall(function() buyGearRemote:FireServer(gearName) end)
end

local function buySeed(seedName)
    pcall(function() buySeedRemote:FireServer(seedName) end)
end

-- ==========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ã‡∏∑‡πâ‡∏≠‡∏´‡∏•‡∏≤‡∏¢ stack ‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≠‡∏ö
-- ==========================
function buyMultipleStacks(itemList, isGear, stackAmount, repeatTimes)
    local remote = isGear and buyGearRemote or buySeedRemote
    task.spawn(function()
        for repeatIndex = 1, repeatTimes do
            for _, itemName in ipairs(itemList) do
                for i = 1, stackAmount do
                    pcall(function()
                        remote:FireServer(itemName)
                    end)
                    task.wait(0.1)
                end
            end
            task.wait(0.5)
        end
    end)
end

-- ==========================
-- Loop Auto Buy Gear & Seed
-- ==========================
task.spawn(function()
    while true do
        task.wait(0.1)

        -- ‡∏ã‡∏∑‡πâ‡∏≠ Gear
        if buyAllGearsEnabled then
            for _, gearName in ipairs(gearsItems) do
                buyGear(gearName)
                task.wait(0.5)
            end
        else
            for gearName, state in pairs(autoBuyGears) do
                if state then
                    buyGear(gearName)
                    task.wait(0.5)
                end
            end
        end

        -- ‡∏ã‡∏∑‡πâ‡∏≠ Seed
        if buyAllSeedsEnabled then
            for _, seedName in ipairs(seedsItems) do
                buySeed(seedName)
                task.wait(0.5)
            end
        else
            for seedName, state in pairs(autoBuySeeds) do
                if state then
                    buySeed(seedName)
                    task.wait(0.5)
                end
            end
        end
    end
end)



-- ==========================
-- Misc Tab
-- ==========================
local MiscTab = Window:MakeTab({
    Name = "‚öôÔ∏è ‡∏≠‡∏∑‡πà‡∏ô‡πÜ",
    Icon = "rbxassetid://6031075936"
})

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤ config (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà)
local config = {}
if isfile("CHXPlantBrainrot/MiscConfig.json") then
    local content = readfile("CHXPlantBrainrot/MiscConfig.json")
    config = game:GetService("HttpService"):JSONDecode(content)
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å config
local function saveConfig()
    if not isfolder("CHXPlantBrainrot") then
        makefolder("CHXPlantBrainrot")
    end
    writefile("CHXPlantBrainrot/MiscConfig.json", game:GetService("HttpService"):JSONEncode(config))
end

-- ==========================
-- Section Player
-- ==========================
local Fram = MiscTab:AddSection({
    Name = "üòé Player"
})

-- ==========================
-- Anti-AFK
-- ==========================
MiscTab:AddToggle({
    Name = "üõ°Ô∏è Anti-AFK 20 ‡∏ô‡∏≤‡∏ó‡∏µ",
    Default = config.antiAFK or false,
    Callback = function(value)
        config.antiAFK = value
        saveConfig()
    end
})

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Anti-AFK
task.spawn(function()
    local VirtualUser = game:GetService("VirtualUser")
    while true do
        task.wait(60)
        if config.antiAFK then
            pcall(function()
                VirtualUser:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
                VirtualUser:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
            end)
        end
    end
end)

-- ==========================
-- WalkSpeed & JumpPower
-- ==========================
MiscTab:AddSlider({
    Name = "üèÉ‚Äç‚ôÇÔ∏è ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏î‡∏¥‡∏ô",
    Min = 16,
    Max = 500,
    Default = humanoid.WalkSpeed,
    Callback = function(value)
        config.walkSpeed = value
        humanoid.WalkSpeed = value
        saveConfig()
    end
})

MiscTab:AddSlider({
    Name = "ü¶ò ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏î",
    Min = 50,
    Max = 500,
    Default = humanoid.JumpPower,
    Callback = function(value)
        config.jumpPower = value
        humanoid.JumpPower = value
        saveConfig()
    end
})

-- ==========================
-- Time of Day Dropdown
-- ==========================
local skyOptions = { "‡πÄ‡∏ä‡πâ‡∏≤ üåÖ", "‡πÄ‡∏¢‡πá‡∏ô üåá", "‡∏û‡∏£‡∏∞‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå‡∏ï‡∏Å üåÑ", "‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô üåå" }
local selectedSky = config.selectedSky or skyOptions[1]

MiscTab:AddDropdown({
    Name = "üïí ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤ / ‡∏ó‡πâ‡∏≠‡∏á‡∏ü‡πâ‡∏≤",
    Default = selectedSky,
    Options = skyOptions,
    Callback = function(value)
        selectedSky = value
        config.selectedSky = value
        saveConfig()
        local lighting = game:GetService("Lighting")
        if value == "‡πÄ‡∏ä‡πâ‡∏≤ üåÖ" then
            lighting.TimeOfDay = "06:30:00"
            lighting.Brightness = 2
            lighting.OutdoorAmbient = Color3.fromRGB(200, 200, 255)
        elseif value == "‡πÄ‡∏¢‡πá‡∏ô üåá" then
            lighting.TimeOfDay = "17:30:00"
            lighting.Brightness = 1.5
            lighting.OutdoorAmbient = Color3.fromRGB(255, 180, 120)
        elseif value == "‡∏û‡∏£‡∏∞‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå‡∏ï‡∏Å üåÑ" then
            lighting.TimeOfDay = "18:15:00"
            lighting.Brightness = 1.2
            lighting.OutdoorAmbient = Color3.fromRGB(255, 150, 100)
        elseif value == "‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô üåå" then
            lighting.TimeOfDay = "22:00:00"
            lighting.Brightness = 0.7
            lighting.OutdoorAmbient = Color3.fromRGB(50, 50, 80)
        end
    end
})

-- ==========================
-- Player Dropdown & Functions
-- ==========================
local SelectedPlayer = config.SelectedPlayer or nil
local PlayerDropdown

local function GetPlayersList()
    local list = {}
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= player then
            table.insert(list, p.Name)
        end
    end
    if #list == 0 then
        table.insert(list, "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô")
    end
    return list
end

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á Dropdown ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
PlayerDropdown = MiscTab:AddDropdown({
    Name = "üë§ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",
    Default = SelectedPlayer or (GetPlayersList()[1] or "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô"),
    Options = GetPlayersList(),
    Callback = function(value)
        if value == "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô" then
            SelectedPlayer = nil
        else
            SelectedPlayer = value
        end
        config.SelectedPlayer = SelectedPlayer
        saveConfig()
    end
})

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
local function RefreshDropdown()
    if PlayerDropdown then
        local newList = GetPlayersList()
        PlayerDropdown:Refresh(newList, true)
        -- ‡∏ñ‡πâ‡∏≤ SelectedPlayer ‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏Å‡∏° ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°
        if SelectedPlayer and table.find(newList, SelectedPlayer) then
            PlayerDropdown:Set(SelectedPlayer)
        else
            SelectedPlayer = nil
            config.SelectedPlayer = nil
            saveConfig()
            PlayerDropdown:Set(newList[1] or "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô")
        end
    end
end

-- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤/‡∏≠‡∏≠‡∏Å
Players.PlayerAdded:Connect(function(plr)
    if plr ~= player then
        RefreshDropdown()
    end
end)

Players.PlayerRemoving:Connect(function(plr)
    if SelectedPlayer == plr.Name then
        SelectedPlayer = nil
        config.SelectedPlayer = nil
        saveConfig()
    end
    RefreshDropdown()
end)


-- ==========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏≤ Carrot Launcher
-- ==========================
local function FindCarrotLauncher()
    for _, tool in ipairs(player.Backpack:GetChildren()) do
        if tool:IsA("Tool") and string.find(tool.Name, "Carrot Launcher") then
            return tool
        end
    end
    for _, tool in ipairs(player.Character:GetChildren()) do
        if tool:IsA("Tool") and string.find(tool.Name, "Carrot Launcher") then
            return tool
        end
    end
    return nil
end

-- ==========================
-- ‡∏õ‡∏∏‡πà‡∏°‡∏ß‡∏≤‡∏õ‡πÑ‡∏õ‡∏´‡∏≤
-- ==========================
MiscTab:AddButton({
    Name = "üìç ‡∏ß‡∏≤‡∏õ‡πÑ‡∏õ‡∏´‡∏≤",
    Callback = function()
        if SelectedPlayer then
            local target = Players:FindFirstChild(SelectedPlayer)
            if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                hrp.CFrame = CFrame.new(target.Character.HumanoidRootPart.Position + Vector3.new(0,2,0))
                OrionLib:MakeNotification({
                    Name = "Teleport",
                    Content = "‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏´‡∏≤ "..SelectedPlayer.." ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
                    Image = "rbxassetid://6031075936",
                    Time = 3
                })
            else
                OrionLib:MakeNotification({
                    Name = "‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß",
                    Content = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ô‡∏±‡πâ‡∏ô",
                    Image = "rbxassetid://6031075936",
                    Time = 3
                })
            end
        else
            OrionLib:MakeNotification({
                Name = "‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß",
                Content = "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô",
                Image = "rbxassetid://6031075936",
                Time = 3
            })
        end
    end
})

-- ==========================
-- ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏¥‡∏á Carrot Launcher
-- ==========================
MiscTab:AddButton({
    Name = "ü•ï ‡∏¢‡∏¥‡∏á Carrot Launcher",
    Callback = function()
        if SelectedPlayer then
            local target = Players:FindFirstChild(SelectedPlayer)
            if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                local tool = FindCarrotLauncher()
                if tool then
                    humanoid:EquipTool(tool)
                    task.wait(0.2)

                    local args = {
                        {
                            Toggle = true,
                            Tool = tool,
                            Time = 0.25,
                            Pos = target.Character.HumanoidRootPart.Position
                        }
                    }
                    ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("UseItem"):FireServer(unpack(args))

                    OrionLib:MakeNotification({
                        Name = "‡∏¢‡∏¥‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
                        Content = "‡∏¢‡∏¥‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á "..SelectedPlayer,
                        Image = "rbxassetid://6031075936",
                        Time = 3
                    })
                else
                    OrionLib:MakeNotification({
                        Name = "‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß",
                        Content = "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ Carrot Launcher",
                        Image = "rbxassetid://6031075936",
                        Time = 3
                    })
                end
            else
                OrionLib:MakeNotification({
                    Name = "‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß",
                    Content = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ô‡∏±‡πâ‡∏ô",
                    Image = "rbxassetid://6031075936",
                    Time = 3
                })
            end
        else
            OrionLib:MakeNotification({
                Name = "‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß",
                Content = "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô",
                Image = "rbxassetid://6031075936",
                Time = 3
            })
        end
    end
})



-- ==========================
-- ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤ config ‡∏ï‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°
-- ==========================
if config.walkSpeed then humanoid.WalkSpeed = config.walkSpeed end
if config.jumpPower then humanoid.JumpPower = config.jumpPower end



-- ==========================
-- Init UI
-- ==========================
OrionLib:Init()

-- ==========================
-- ‡πÇ‡∏´‡∏•‡∏î WindUI
-- ==========================
-- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏à‡∏≤‡∏Å OrionLib ‡πÄ‡∏õ‡πá‡∏ô l (‡∏ï‡∏≤‡∏°‡πÇ‡∏Ñ‡πâ‡∏î WindUI ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô)
local l = loadstring(game:HttpGet('https://raw.githubusercontent.com/Chxtoqfee12/Plant-brainrot/refs/heads/main/liba'))()

-- ==========================
-- ‡∏™‡∏£‡πâ‡∏≤‡∏á Window (‡πÉ‡∏ä‡πâ :CreateWindow ‡∏Ç‡∏≠‡∏á WindUI)
-- ==========================
local Window = l:CreateWindow({
    Title = "CHX Plant vs Brainrot V2.3.5", -- ‡πÉ‡∏ä‡πâ Title ‡πÅ‡∏ó‡∏ô Name
    Icon = "rbxassetid://6031075936",
    Author = "CHX", -- ‡πÄ‡∏û‡∏¥‡πà‡∏° Author
    Folder = "CHXPlantBrainrot", -- ‡πÉ‡∏ä‡πâ Folder ‡πÅ‡∏ó‡∏ô ConfigFolder
    Size = UDim2.fromOffset(500, 390),
    Theme = "Dark",
})


-- ==========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Config (‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô)
-- **‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏™‡πà‡∏ß‡∏ô Config ‡∏ñ‡∏π‡∏Å‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏á‡πà‡∏≤‡∏¢‡∏•‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ Global ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå**
-- ==========================
local config = {}
local function saveConfig()
    -- WindUI ‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö Config ‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ï‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏°‡∏≤ ‡∏à‡∏∞‡∏•‡∏∞‡πÄ‡∏ß‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå
end
local function loadConfig()
    -- ‡∏•‡∏∞‡πÄ‡∏ß‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
end
loadConfig()

-- ==========================
-- ‡∏™‡∏£‡πâ‡∏≤‡∏á Tabs (‡πÉ‡∏ä‡πâ :Tab ‡∏Ç‡∏≠‡∏á WindUI)
-- ==========================
local FarmTab = Window:Tab({
    Title = "üöú ‡∏ü‡∏≤‡∏£‡πå‡∏°", -- ‡πÉ‡∏ä‡πâ Title ‡πÅ‡∏ó‡∏ô Name
    Icon = "leaf", -- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Icon ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
})

local EventTab = Window:Tab({
    Title = "üé© ‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ó‡πå",
    Icon = "gem",
})

local ShopTab = Window:Tab({
    Title = "üõí ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤",
    Icon = "shopping-cart"
})

local MiscTab = Window:Tab({
    Title = "‚öôÔ∏è ‡∏≠‡∏∑‡πà‡∏ô‡πÜ",
    Icon = "settings"
})

-- ==========================
-- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£
-- ==========================
local player = game.Players.LocalPlayer
local homeSaved = false
local homePosition = nil
local autoAttackEnabled = false
local autoCollectEnabled = false
local warnedNoSave = false

-- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ loop
local startFarming = false
local hasWarpedToHome = false

-- ==========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ö‡πâ‡∏≤‡∏ô
-- ==========================
local function saveHomePosition()
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        homePosition = player.Character.HumanoidRootPart.Position
        homeSaved = true

        l:Notify({ -- ‡πÉ‡∏ä‡πâ :Notify ‡∏Ç‡∏≠‡∏á WindUI
            Title = "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ö‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß",
            Content = "‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
            Duration = 3,
            Icon = "check",
        })
    end
end

-- ==========================
-- Section: ‡∏ü‡∏≤‡∏£‡πå‡∏° (‡πÉ‡∏ä‡πâ :Section ‡∏Ç‡∏≠‡∏á WindUI)
-- ==========================
FarmTab:Section({ Title = "üöú ‡∏ü‡∏≤‡∏£‡πå‡∏°" })

-- ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ö‡πâ‡∏≤‡∏ô (‡πÉ‡∏ä‡πâ :Button ‡∏Ç‡∏≠‡∏á WindUI)
FarmTab:Button({
    Title = "üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ö‡πâ‡∏≤‡∏ô",
    Callback = saveHomePosition
})

-- Toggle Auto Attack (‡πÉ‡∏ä‡πâ :Toggle ‡∏Ç‡∏≠‡∏á WindUI)
FarmTab:Toggle({
    Title = "‚öîÔ∏è ‡πÇ‡∏à‡∏°‡∏ï‡∏µ Brainrot ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥",
    Default = false,
    Callback = function(value)
        autoAttackEnabled = value
        if value then
            hasWarpedToHome = false
            startFarming = false
            if not homeSaved and not warnedNoSave then
                l:Notify({
                    Title = "‚ö†Ô∏è ‡πÇ‡∏õ‡∏£‡∏î‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ö‡πâ‡∏≤‡∏ô",
                    Content = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠ Warp ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏à‡∏°‡∏ï‡∏µ",
                    Duration = 5,
                    Icon = "triangle-alert",
                })
                warnedNoSave = true
            else
                warnedNoSave = false
            end
        end
    end
})

-- Toggle Auto Collect (‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏∏‡∏Å 5 ‡∏ß‡∏¥)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local equipRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("EquipBestBrainrots")

FarmTab:Toggle({
    Title = "üí∏ ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏∏‡∏Å 5 ‡∏ß‡∏¥",
    Default = false,
    Callback = function(value)
        autoCollectEnabled = value
        if value then
            task.spawn(function()
                while autoCollectEnabled do
                    pcall(function()
                        equipRemote:FireServer()
                    end)
                    task.wait(5)
                end
            end)
        end
    end
})

-- Toggle Auto Sell
local sellRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("ItemSell")
local sellingEnabled = false
local cooldownTime = 20
local lastSellTime = 0

FarmTab:Toggle({
    Title = "üí∞ ‡∏Ç‡∏≤‡∏¢ Brainrot ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏∏‡∏Å20‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ",
    Default = false,
    Callback = function(value)
        sellingEnabled = value
    end
})

-- ==========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏≤ Brainrots
-- ==========================
local attackRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("AttacksServer"):WaitForChild("WeaponAttack")
local floatHeight = 3
local lerpSpeed = 0.5
local warnedNoBat = false

local function getBrainrots()
    local folder = workspace:FindFirstChild("ScriptedMap") and workspace.ScriptedMap:FindFirstChild("Brainrots")
    if not folder then return {} end
    local brainrots = {}
    for _, v in ipairs(folder:GetChildren()) do
        if v:IsA("Model") then
            table.insert(brainrots, v)
        end
    end
    return brainrots
end

-- ==========================
-- Loop Auto Attack + Auto Sell + Auto Equip Bat + Warp Home (‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô)
-- ==========================
task.spawn(function()
    while true do
        task.wait(0.005)

        if autoAttackEnabled and player.Character then
            local hrp = player.Character:FindFirstChild("HumanoidRootPart")
            local humanoid = player.Character:FindFirstChild("Humanoid")
            local tool = player.Character:FindFirstChildOfClass("Tool")

            if hrp and humanoid then
                humanoid.PlatformStand, humanoid.Sit = false, false
                hrp.Velocity = Vector3.zero

                -- ===== Auto Equip Bat =====
                if not tool then
                    local backpack = player:FindFirstChild("Backpack")
                    local foundBat = nil
                    if backpack then
                        for _, item in ipairs(backpack:GetChildren()) do
                            if item:IsA("Tool") and string.find(item.Name:lower(), "bat") then
                                foundBat = item
                                break
                            end
                        end
                    end
                    if foundBat then
                        player.Character.Humanoid:EquipTool(foundBat)
                        tool = foundBat
                    else
                        if not warnedNoBat then
                            l:Notify({
                                Title = "‚ö†Ô∏è ‡πÇ‡∏õ‡∏£‡∏î‡∏ñ‡∏∑‡∏≠ Bat",
                                Content = "‡∏´‡∏≤ Bat ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤/‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ ‡∏î‡∏≤‡πÄ‡∏°‡∏à‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤",
                                Duration = 4,
                                Icon = "triangle-alert",
                            })
                            warnedNoBat = true
                            spawn(function()
                                wait(6)
                                warnedNoBat = false
                            end)
                        end
                    end
                end

                -- ===== Warp to home ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î Auto =====
                if not hasWarpedToHome and homeSaved and homePosition then
                    hrp.CFrame = CFrame.new(homePosition)
                    hasWarpedToHome = true
                    task.delay(1, function()
                        startFarming = true
                    end)
                end

                -- ===== Start farming Brainrots =====
                if startFarming then
                    local brainrots = getBrainrots()
                    local closest, minDist = nil, math.huge
                    for _, enemy in ipairs(brainrots) do
                        if enemy and enemy.Parent then
                            local part = enemy:FindFirstChild("HumanoidRootPart") or enemy:FindFirstChildWhichIsA("BasePart")
                            if part then
                                local dist = (part.Position - hrp.Position).Magnitude
                                if dist < minDist then
                                    closest = enemy
                                    minDist = dist
                                end
                            end
                        end
                    end
                    if closest and closest.Parent then
                        local targetPart = closest:FindFirstChild("HumanoidRootPart") or closest:FindFirstChildWhichIsA("BasePart")
                        if targetPart then
                            local desiredPos = Vector3.new(targetPart.Position.X, targetPart.Position.Y - floatHeight, targetPart.Position.Z)
                            local newPos = hrp.Position:Lerp(desiredPos, lerpSpeed)
                            hrp.CFrame = CFrame.new(newPos, Vector3.new(targetPart.Position.X, newPos.Y, targetPart.Position.Z))
                            local idObj = closest:FindFirstChild("ID")
                            local idValue = idObj and idObj.Value or closest.Name
                            for i = 1, 6 do
                                pcall(function()
                                    attackRemote:FireServer({idValue})
                                end)
                            end
                        end
                    end
                end
            end
        end

        -- ===== Auto Sell Brainrot =====
        if sellingEnabled and tick() - lastSellTime >= cooldownTime then
            pcall(function()
                sellRemote:FireServer()
            end)
            lastSellTime = tick()
        end
    end
end)




-- ==========================
-- ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Gear ‡πÅ‡∏•‡∏∞ Seed (‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô)
-- ==========================
local gearsItems = {"Water Bucket","Frost Grenade","Banana Gun","Frost Blower","Carrot Launcher"}
local seedsItems = {"Cactus Seed","Strawberry Seed","Pumpkin Seed","Sunflower Seed","Dragon Fruit Seed","Eggplant Seed","Watermelon Seed","Grape Seed","Cocotank Seed","Carnivorous Plant Seed","Mr Carrot Seed","Tomatrio Seed","Shroombino Seed","Mango Seed","King Limone Seed"}

local autoBuyGears = {}
local autoBuySeeds = {}
for _, gearName in ipairs(gearsItems) do
    autoBuyGears[gearName] = config.autoBuyGears and config.autoBuyGears[gearName] or false
end
for _, seedName in ipairs(seedsItems) do
    autoBuySeeds[seedName] = config.autoBuySeeds and config.autoBuySeeds[seedName] or false
end

local buyAllGearsEnabled = config.buyAllGearsEnabled or false
local buyAllSeedsEnabled = config.buyAllSeedsEnabled or false


-- ==========================
-- Shop Tab
-- ==========================
-- (‡∏¢‡πâ‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏°‡∏≤‡∏Ç‡πâ‡∏≤‡∏á‡∏ö‡∏ô‡πÅ‡∏•‡πâ‡∏ß)

-- ==========================
-- Section: Gears Shop (‡πÉ‡∏ä‡πâ :Section ‡∏Ç‡∏≠‡∏á WindUI)
-- ==========================
ShopTab:Section({
    Title = "üõí Gear"
})

-- Toggle ‡∏ã‡∏∑‡πâ‡∏≠ Gear ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡πÉ‡∏ä‡πâ :Toggle ‡∏Ç‡∏≠‡∏á WindUI)
ShopTab:Toggle({
    Title = "‡∏ã‡∏∑‡πâ‡∏≠ Gear ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥",
    Default = buyAllGearsEnabled,
    Callback = function(state)
        buyAllGearsEnabled = state
        config.buyAllGearsEnabled = state
        saveConfig()
    end
})

-- Toggle Gear ‡∏£‡∏≤‡∏¢‡∏ï‡∏±‡∏ß (‡πÉ‡∏ä‡πâ :Toggle ‡∏Ç‡∏≠‡∏á WindUI)
for _, gearName in ipairs(gearsItems) do
    ShopTab:Toggle({
        Title = gearName,
        Default = autoBuyGears[gearName],
        Callback = function(state)
            autoBuyGears[gearName] = state
            config.autoBuyGears = autoBuyGears
            saveConfig()
        end
    })
end

-- ==========================
-- Section: Seeds Shop (‡πÉ‡∏ä‡πâ :Section ‡∏Ç‡∏≠‡∏á WindUI)
-- ==========================
ShopTab:Section({
    Title = "üõí Seed"
})

-- Toggle ‡∏ã‡∏∑‡πâ‡∏≠ Seed ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡πÉ‡∏ä‡πâ :Toggle ‡∏Ç‡∏≠‡∏á WindUI)
ShopTab:Toggle({
    Title = "‡∏ã‡∏∑‡πâ‡∏≠ Seed ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥",
    Default = buyAllSeedsEnabled,
    Callback = function(state)
        buyAllSeedsEnabled = state
        config.buyAllSeedsEnabled = state
        saveConfig()
    end
})

-- Toggle Seed ‡∏£‡∏≤‡∏¢‡∏ï‡∏±‡∏ß (‡πÉ‡∏ä‡πâ :Toggle ‡∏Ç‡∏≠‡∏á WindUI)
for _, seedName in ipairs(seedsItems) do
    ShopTab:Toggle({
        Title = seedName,
        Default = autoBuySeeds[seedName],
        Callback = function(state)
            autoBuySeeds[seedName] = state
            config.autoBuySeeds = autoBuySeeds
            saveConfig()
        end
    })
end

-- ==========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ã‡∏∑‡πâ‡∏≠ Gear / Seed (‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô)
-- ==========================
local buyGearRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("BuyGear")
local buySeedRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("BuyItem")

local function buyGear(gearName)
    pcall(function() buyGearRemote:FireServer(gearName) end)
end

local function buySeed(seedName)
    pcall(function() buySeedRemote:FireServer(seedName) end)
end

-- ==========================
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ã‡∏∑‡πâ‡∏≠‡∏´‡∏•‡∏≤‡∏¢ stack ‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≠‡∏ö (‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô)
-- ==========================
function buyMultipleStacks(itemList, isGear, stackAmount, repeatTimes)
    local remote = isGear and buyGearRemote or buySeedRemote
    task.spawn(function()
        for repeatIndex = 1, repeatTimes do
            for _, itemName in ipairs(itemList) do
                for i = 1, stackAmount do
                    pcall(function()
                        remote:FireServer(itemName)
                    end)
                    task.wait(0.1)
                end
            end
            task.wait(0.5)
        end
    end)
end

-- ==========================
-- Loop Auto Buy Gear & Seed (‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô)
-- ==========================
task.spawn(function()
    while true do
        task.wait(0.1)

        -- ‡∏ã‡∏∑‡πâ‡∏≠ Gear
        if buyAllGearsEnabled then
            for _, gearName in ipairs(gearsItems) do
                buyGear(gearName)
                task.wait(0.5)
            end
        else
            for gearName, state in pairs(autoBuyGears) do
                if state then
                    buyGear(gearName)
                    task.wait(0.5)
                end
            end
        end

        -- ‡∏ã‡∏∑‡πâ‡∏≠ Seed
        if buyAllSeedsEnabled then
            for _, seedName in ipairs(seedsItems) do
                buySeed(seedName)
                task.wait(0.5)
            end
        else
            for seedName, state in pairs(autoBuySeeds) do
                if state then
                    buySeed(seedName)
                    task.wait(0.5)
                end
            end
        end
    end
end)



-- =======================================================
-- ‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
-- =======================================================
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- ==========================
-- Section Player
-- ==========================
MiscTab:Section({ Title = "üòé Player" })

-- ==========================
-- Multi-Select Player Dropdown
-- ==========================
local SelectedPlayers = config.SelectedPlayers or {} -- ‡πÄ‡∏Å‡πá‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
local PlayerDropdown

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
local function GetPlayersList()
    local list = {}
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= player then
            table.insert(list, p.Name)
        end
    end
    table.sort(list)
    if #list == 0 then
        table.insert(list, "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô")
    end
    return list
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Refresh Dropdown
local function RefreshDropdown()
    if PlayerDropdown then
        local newList = GetPlayersList()
        PlayerDropdown:Refresh({Values = newList})
        RunService.Heartbeat:Wait() -- ‡∏£‡∏≠‡πÉ‡∏´‡πâ GUI ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
        -- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
        local validSelected = {}
        for _, name in ipairs(SelectedPlayers) do
            if table.find(newList, name) then
                table.insert(validSelected, name)
            end
        end
        SelectedPlayers = validSelected
        PlayerDropdown:Set(SelectedPlayers)
    end
end

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á Dropdown ‡πÅ‡∏ö‡∏ö Multi-Select + Searchable
PlayerDropdown = MiscTab:Dropdown({
    Title = "üë§ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô",
    Multi = true,
    SearchBarEnabled = true,
    Values = {"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î..."}, -- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    Value = SelectedPlayers,
    Callback = function(values)
        -- values ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        SelectedPlayers = values
        config.SelectedPlayers = SelectedPlayers
        saveConfig()
        print("Selected Players: ", table.concat(SelectedPlayers, ", "))
    end
})

-- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å RefreshDropdown ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á Dropdown
task.spawn(function()
    RunService.Heartbeat:Wait()
    RefreshDropdown()
end)

-- ‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
MiscTab:Button({
    Title = "üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô",
    Callback = RefreshDropdown
})

-- ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤/‡∏≠‡∏≠‡∏Å
Players.PlayerAdded:Connect(function(plr)
    if plr ~= player then
        RefreshDropdown()
    end
end)

Players.PlayerRemoving:Connect(function(plr)
    local idx = table.find(SelectedPlayers, plr.Name)
    if idx then
        table.remove(SelectedPlayers, idx)
        config.SelectedPlayers = SelectedPlayers
        saveConfig()
    end
    RefreshDropdown()
end)
